#!/bin/bash

# Script de otimizaÃ§Ã£o do WASM para Soroban
echo "ðŸ”§ Compilando contrato com otimizaÃ§Ãµes..."

# Build em release mode
cargo build --target wasm32-unknown-unknown --release

echo "ðŸ“¦ Tamanho original do WASM:"
ls -lh target/wasm32-unknown-unknown/release/payment_with_fee.wasm

echo "ðŸš€ Otimizando com wasm-opt..."

# Otimizar com wasm-opt (mÃºltiplas passadas para mÃ¡xima otimizaÃ§Ã£o)
wasm-opt -Oz --enable-bulk-memory \
    target/wasm32-unknown-unknown/release/payment_with_fee.wasm \
    -o target/wasm32-unknown-unknown/release/payment_with_fee_optimized.wasm

echo "âœ¨ Tamanho apÃ³s otimizaÃ§Ã£o:"
ls -lh target/wasm32-unknown-unknown/release/payment_with_fee_optimized.wasm

echo "ðŸ“Š ComparaÃ§Ã£o de tamanhos:"
echo "Original:   $(stat -f%z target/wasm32-unknown-unknown/release/payment_with_fee.wasm) bytes"
echo "Otimizado:  $(stat -f%z target/wasm32-unknown-unknown/release/payment_with_fee_optimized.wasm) bytes"

# Calcular reduÃ§Ã£o percentual
original_size=$(stat -f%z target/wasm32-unknown-unknown/release/payment_with_fee.wasm)
optimized_size=$(stat -f%z target/wasm32-unknown-unknown/release/payment_with_fee_optimized.wasm)
reduction=$(echo "scale=2; ($original_size - $optimized_size) * 100 / $original_size" | bc)

echo "ðŸŽ¯ ReduÃ§Ã£o: ${reduction}%"

echo "âœ… WASM otimizado salvo em: target/wasm32-unknown-unknown/release/payment_with_fee_optimized.wasm"